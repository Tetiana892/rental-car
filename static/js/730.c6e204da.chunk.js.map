{"version":3,"file":"static/js/730.c6e204da.chunk.js","mappings":"wRAEaA,EAAmBC,EAAAA,EAAAA,IAAH,mNAWhBC,EAAgBD,EAAAA,EAAAA,EAAH,mI,UCuG1B,EAzGgB,WACd,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAE5B,GAA8BC,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,KAJd,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,GAA8CN,EAAAA,EAAAA,UAAS,MAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAAsCR,EAAAA,EAAAA,WAAS,GAA/C,eAAOS,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRhB,GAASiB,EAAAA,EAAAA,KACV,GAAE,CAACjB,KAEJgB,EAAAA,EAAAA,YAAU,WACR,GAAIF,EACF,GACEJ,EAAQJ,MACRI,EAAQH,eAAeW,OAAS,GAChCR,EAAQF,YACRE,EAAQD,WACR,CACA,IAAMG,EAAkBV,EAAQiB,QAAO,SAAAC,GACrC,QAAIV,EAAQJ,MAAQc,EAAOd,OAASI,EAAQJ,KAAKe,WAI/CX,EAAQH,eAAeW,OAAS,IAC/BR,EAAQH,eAAee,MACtB,SAAAC,GAAQ,OAAIA,EAASF,QAAUD,EAAOI,YAAYC,QAAQ,IAAK,GAAvD,SAKRf,EAAQF,YAAcY,EAAOM,QAAUhB,EAAQF,eAG/CE,EAAQD,YAAcW,EAAOM,QAAUhB,EAAQD,aAIpD,IACDI,EAAmBD,EACpB,MACCC,EAAmB,GAGxB,GAAE,CAACH,EAASR,EAASY,IAEtB,IAAMa,GAAK,OAAO,IAAIC,IAAI1B,EAAQ2B,KAAI,SAAAT,GAAM,OAAIA,EAAOd,IAAX,MACtCwB,GAAM,OACP,IAAIF,IAAI1B,EAAQ2B,KAAI,SAAAT,GAAM,OAAIA,EAAOI,YAAYC,QAAQ,IAAK,GAApC,MAEzBC,GAAO,OAAO,IAAIE,IAAI1B,EAAQ2B,KAAI,SAAAT,GAAM,OAAIA,EAAOM,OAAX,MACxClB,EAAauB,KAAKC,IAAL,MAAAD,MAAI,OAAQL,IACzBjB,EAAasB,KAAKE,IAAL,MAAAF,MAAI,OAAQL,IAY/B,OACE,iCACE,UAAC7B,EAAD,YACE,SAACqC,EAAA,EAAD,CACEP,MAAOA,EACPG,OAAQA,EACRtB,WAAYA,EACZC,WAAYA,EACZ0B,eAAgB,SAAAC,GACdzB,EAAWyB,GACXrB,GAAe,EAChB,EACDL,QAASA,EACT2B,aAvBiB,WACvB1B,EAAW,CACTL,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,KAEdM,GAAe,EAChB,IAiBMD,EACqB,OAApBF,GAA4BA,EAAgBM,OAAS,GACnD,SAACoB,EAAA,EAAD,CAAY1B,gBAAiBA,KAE7B,+BACE,SAACb,EAAD,UAAe,mDAMnB,SAACuC,EAAA,EAAD,CAAYC,QAASrC,QAGzB,SAAC,KAAD,KACA,SAACsC,EAAA,EAAD,MAGL,C","sources":["pages/Catalog/Catalog.styled.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  max-width: 1184px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n  min-height: 65vh;\n`;\n\nexport const ResultMessage = styled.p`\n  margin-top: 50px;\n  font-size: 24px;\n  font-family: ManropeRegular;\n  color: rgba(138, 138, 137, 1);\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCars } from 'redux/adverts/selectors';\nimport { fetchCars } from 'redux/adverts/operation';\nimport { ToastContainer } from 'react-toastify';\nimport AdvertList from 'components/AdvertList/AdvertList';\nimport Footer from 'components/Footer/Footer';\nimport FilterForm from 'components/FilterForm/FilterForm';\n\nimport { CatalogContainer, ResultMessage } from './Catalog.styled';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const allCars = useSelector(getCars);\n\n  const [filters, setFilters] = useState({\n    make: '',\n    filteredPrices: [],\n    minMileage: '',\n    maxMileage: '',\n  });\n  const [filteredAdverts, setFilteredAdverts] = useState(null);\n  const [isFiltering, setIsFiltering] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isFiltering) {\n      if (\n        filters.make ||\n        filters.filteredPrices.length > 0 ||\n        filters.minMileage ||\n        filters.maxMileage\n      ) {\n        const filteredAdverts = allCars.filter(advert => {\n          if (filters.make && advert.make !== filters.make.value) {\n            return false;\n          }\n          if (\n            filters.filteredPrices.length > 0 &&\n            !filters.filteredPrices.some(\n              priceObj => priceObj.value === advert.rentalPrice.replace('$', '')\n            )\n          ) {\n            return false;\n          }\n          if (filters.minMileage && advert.mileage < filters.minMileage) {\n            return false;\n          }\n          if (filters.maxMileage && advert.mileage > filters.maxMileage) {\n            return false;\n          }\n          return true;\n        });\n        setFilteredAdverts(filteredAdverts);\n      } else {\n        setFilteredAdverts([]);\n      }\n    }\n  }, [filters, allCars, isFiltering]);\n\n  const makes = [...new Set(allCars.map(advert => advert.make))];\n  const prices = [\n    ...new Set(allCars.map(advert => advert.rentalPrice.replace('$', ''))),\n  ];\n  const mileage = [...new Set(allCars.map(advert => advert.mileage))];\n  const minMileage = Math.min(...mileage);\n  const maxMileage = Math.max(...mileage);\n\n  const handleResetClick = () => {\n    setFilters({\n      make: '',\n      filteredPrices: [],\n      minMileage: '',\n      maxMileage: '',\n    });\n    setIsFiltering(false);\n  };\n\n  return (\n    <>\n      <CatalogContainer>\n        <FilterForm\n          makes={makes}\n          prices={prices}\n          minMileage={minMileage}\n          maxMileage={maxMileage}\n          onFilterChange={newFilters => {\n            setFilters(newFilters);\n            setIsFiltering(true);\n          }}\n          filters={filters}\n          onResetClick={handleResetClick}\n        />\n        {isFiltering ? (\n          filteredAdverts !== null && filteredAdverts.length > 0 ? (\n            <AdvertList filteredAdverts={filteredAdverts} />\n          ) : (\n            <>\n              <ResultMessage>\n                No results found for the selected criteria.\n              </ResultMessage>\n            </>\n          )\n        ) : (\n          <AdvertList adverts={allCars} />\n        )}\n      </CatalogContainer>\n      <ToastContainer />\n      <Footer />\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["CatalogContainer","styled","ResultMessage","dispatch","useDispatch","allCars","useSelector","getCars","useState","make","filteredPrices","minMileage","maxMileage","filters","setFilters","filteredAdverts","setFilteredAdverts","isFiltering","setIsFiltering","useEffect","fetchCars","length","filter","advert","value","some","priceObj","rentalPrice","replace","mileage","makes","Set","map","prices","Math","min","max","FilterForm","onFilterChange","newFilters","onResetClick","AdvertList","adverts","Footer"],"sourceRoot":""}